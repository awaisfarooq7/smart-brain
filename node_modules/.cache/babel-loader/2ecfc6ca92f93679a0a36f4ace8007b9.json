{"ast":null,"code":"var _jsxFileName = \"/home/awais/Desktop/robofriends/src/App.js\";\nimport React from 'react';\nimport Clarifai from 'clarifai';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Navigation from './components/Navigation/Navigation';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport './App.css';\nconst app = new Clarifai.App({\n  apiKey: '2a2fc958da594c80ad07e6f45cec80d3'\n});\nconst initialState = {\n  input: '',\n  imageUrl: '',\n  box: {},\n  route: 'signin',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: ''\n  }\n};\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => {\n        if (response) {\n          fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          }).then(response => response.json()).then(count => {\n            this.setState(Object.assign(this.state.user, {\n              entries: count\n            }));\n          }).catch(console.log);\n        }\n\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      }).catch(err => console.log(err));\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'signout') {\n        this.setState(initialState);\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = initialState;\n  }\n\n  render() {\n    const _this$state = this.state,\n          isSignedIn = _this$state.isSignedIn,\n          imageUrl = _this$state.imageUrl,\n          route = _this$state.route,\n          box = _this$state.box;\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(Navigation, {\n      isSignedIn: isSignedIn,\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), route === 'home' ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(Logo, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }), React.createElement(Rank, {\n      name: this.state.user.name,\n      entries: this.state.user.entries,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), React.createElement(ImageLinkForm, {\n      onInputChange: this.onInputChange,\n      onButtonSubmit: this.onButtonSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }), React.createElement(FaceRecognition, {\n      box: box,\n      imageUrl: imageUrl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    })) : route === 'signin' ? React.createElement(Signin, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }) : React.createElement(Register, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/awais/Desktop/robofriends/src/App.js"],"names":["React","Clarifai","FaceRecognition","Navigation","Signin","Register","Logo","ImageLinkForm","Rank","app","App","apiKey","initialState","input","imageUrl","box","route","isSignedIn","user","id","name","email","entries","joined","Component","constructor","loadUser","data","setState","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","onInputChange","event","target","value","onButtonSubmit","state","models","predict","FACE_DETECT_MODEL","then","response","fetch","method","headers","body","JSON","stringify","json","count","Object","assign","catch","console","log","err","onRouteChange","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Clarifai from 'clarifai';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Navigation from './components/Navigation/Navigation';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport './App.css';\n\nconst app = new Clarifai.App({\n apiKey: '2a2fc958da594c80ad07e6f45cec80d3'\n});\n\nconst initialState = {\n\tinput: '',\n\timageUrl:'',\n\tbox: {},\n\troute: 'signin',\n\tisSignedIn: false,\n\tuser: {\n\t\tid: '',\n\t\tname: '',\n\t\temail: '',\n\t\tentries: 0,\n\t\tjoined: ''\n\t}\n}\nclass App extends React.Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state= initialState;\n\t}\n\n\tloadUser = (data) => {\n\t\tthis.setState({user: {\n\t\t\tid: data.id,\n\t\t\tname: data.name,\n\t\t\temail: data.email,\n\t\t\tentries: data.entries,\n\t\t\tjoined: data.joined\n\t\t}})\n\t}\n\n\tcalculateFaceLocation =(data)=>{\n\t\tconst clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n\t\tconst image = document.getElementById('inputimage');\n\t\tconst width = Number(image.width);\n\t\tconst height = Number(image.height);\n\t\treturn {\n\t\t\tleftCol: clarifaiFace.left_col * width,\n\t\t\ttopRow: clarifaiFace.top_row * height,\n\t\t\trightCol: width - (clarifaiFace.right_col * width),\n\t\t\tbottomRow: height - (clarifaiFace.bottom_row * height)\n\t\t}\n\t}\n\n\tdisplayFaceBox = (box)=> {\n\t\tthis.setState({box: box})\n\t}\n\n\tonInputChange = (event)=> {\n\t\tthis.setState({input: event.target.value});\n\t}\n\n\tonButtonSubmit = ()=>{\n\t\tthis.setState({imageUrl: this.state.input});\n\t\tapp.models\n\t\t\t.predict(\n\t\t\t\tClarifai.FACE_DETECT_MODEL,\n\t\t\t\tthis.state.input)\n\t\t\t.then(response => {\n\t\t\t\tif (response){\n\t\t\t\t\tfetch('http://localhost:3000/image',{\n\t\t\t\t\t\tmethod: 'put',\n\t\t\t\t\t\theaders: {'Content-Type': 'application/json'},\n\t\t\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\t\t\tid: this.state.user.id\n\t\t\t\t\t\t})\n\t\t\t\t\t})\n\t\t\t\t\t\t.then(response=> response.json())\n\t\t\t\t\t\t.then(count =>{\n\t\t\t\t\t\t\tthis.setState(Object.assign(this.state.user,{ entries: count}))\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch(console.log)\n\t\t\t\t}\n\t\t\t\tthis.displayFaceBox(this.calculateFaceLocation(response))\n\t\t\t})\n\t    \t.catch(err => console.log(err));\n\t}\n\n\tonRouteChange = (route)=> {\n\t\tif (route === 'signout') {\n\t\t\tthis.setState(initialState)\n\t\t} else if (route === 'home') {\n\t\t\tthis.setState({isSignedIn: true})\n\t\t}\n\t\tthis.setState({route: route});\n\t}\n\n\trender(){\n\t\tconst { isSignedIn, imageUrl, route, box } = this.state;\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange} />\n\t\t\t\t{ route === 'home'\n\t\t\t\t\t? <div>\n\t\t\t\t\t\t<Logo />\n\t\t\t\t\t\t<Rank \n\t\t\t\t\t\t\tname={this.state.user.name}\n               \t\t\t\tentries={this.state.user.entries}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<ImageLinkForm\n\t\t\t\t\t\t\tonInputChange={this.onInputChange}\n\t\t\t\t\t\t\tonButtonSubmit={this.onButtonSubmit}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t<FaceRecognition box={box} imageUrl={imageUrl} />\n\t\t\t\t\t </div>\n\t\t\t\t\t: (\n\t\t\t\t\t\troute === 'signin'\n\t\t\t\t\t\t? <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n\t\t\t\t\t\t: <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/> \n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t</div>\n\n\t \t);\n\t}\t\t\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}